{"version":3,"file":"static/webpack/static/development/pages/signup.js.52872cbcfbbab615fc23.hot-update.js","sources":["webpack:///./pages/signup.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Form, Input, Checkbox, Button } from 'antd';\n\nexport const useInput = (initValue = null) => {\n  const [value, setter] = useState(initValue);\n  const handler = useCallback((e) => {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nconst Signup = () => {\n  const [passwordCheck, setPasswordCheck] = useState('');\n  const [term, setTerm] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [termError, setTermError] = useState(false);\n\n  const [id, onChangeId] = useInput('');\n  const [nick, onChangeNick] = useInput('');\n  const [password, onChangePassword] = useInput('');\n\n  const onSubmit = useCallback((e) => {\n    e.preventDefault();\n    if(password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n    if(!term) {\n      return setTermError(true);\n    }\n  }, [password, passwordCheck, term]);\n\n  const onChangePasswordChk = useCallback((e) => {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n\n  const onChangeTerm = useCallback((e) => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n\n  return (\n    <>\n      <Form onSubmit={onSubmit} style={{ padding: 10 }}>\n        <div>\n          <label htmlFor=\"user-id\">id</label>\n          <br/>\n          <Input name=\"user-id\" value={id} required onChange={onChangeId}/>\n        </div>\n        <div>\n          <label htmlFor=\"user-nick\">nickname</label>\n          <br/>\n          <Input name=\"user-nick\" value={nick} required onChange={onChangeNick}/>\n        </div>\n        <div>\n          <label htmlFor=\"user-password\">password</label>\n          <br/>\n          <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword}/>\n        </div>\n        <div>\n          <label htmlFor=\"user-password-check\">password check</label>\n          <br/>\n          <Input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordChk}/>\n          {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치하지 않습니다.</div>}\n        </div>\n        <div>\n          <Checkbox name=\"user-term\" value={term} onChange={onChangeTerm}>개인정보 수집에 동의합니다.</Checkbox>\n          {termError && <div style={{ color: 'red' }}>약관에 동의하셔야 합니다.</div>}\n        </div>\n        <div sttyle={{ marginTop: 10 }}>\n          <Button type=\"primary\" htmlType=\"submit\">signup</Button>\n        </div>\n      </Form>\n    </>\n  )\n}\n\nexport default Signup;"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}